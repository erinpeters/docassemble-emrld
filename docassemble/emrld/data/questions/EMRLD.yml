---
metadata:
  title: |
    EMRLD: Electronic Means for Renter & Landlord Disputes
  short title: |
    EMRLD
  tab title: |
    EMRLD
  description: |
    A guided interview to help renters fill out the forms used by the Residential Tenancies Dispute Resolution Service (RTDRS) in Alberta.
  right: |
    ![Markdown logo](https://cloudfront.ualberta.ca/-/media/toolkit/guideline-graphics/ua-colour.jpg?w=300)
    ![Markdown logo](https://www.eclc.ca/wp-content/themes/clg-edmonton/img/logo-new.gif)
  help label: |
    ?
  authors:
    - name: LAW 599 Coding the Law
      organization: University of Alberta Faculty of Law
---
auto terms: 
    RTA: |
      The Residential Tenancies Act is the law that talks about the rights and responsibilities of renters and landlords.
    tenant: |
      This is you and anyone you live with.
    landlord: |
      This is the person you are renting from.
    RTDRS: |
      Residential Tenancy Dispute Resolution Service
    Statement of Account: |   
      Sets out the amount of the security deposit originally paid, the amount being returned, and any deductions.
    witnesses: |
      People who know about your rental situation and who can speak on your behalf.
    Fixed term: |
      You are renting for a set length of time.
    Month to month: |
      You are renting only for one month at a time.
    Tenancy Agreement: |
      A document that you and your landlord both signed, which sets out information about the rental such as how long you will live there, how much you will pay, what the rent includes.
    security deposit: |
      An amount of money that you gave the landlord when you moved in.
    Orders: |
      A court or a judge has told a person to do or not do something.
    Judgments: |
      An issue with this rental has already been decided in court.
---
modules:
  - docassemble.base.core
  - docassemble.base.util
---
objects:
  - tenant: DAList.using(object_type=Individual, complete_attribute="complete",there_are_any=True)
  - landlord: DAList.using(object_type=Individual, complete_attribute="complete", there_are_any=True)
  - witness: DAList.using(object_type=Individual)
---
## Variable Initialize block
## sets certain variables to a blank space for printing
##
code: |
  other_premises_type=" "
  other_term=" "
  abatement_attach=" "
  damages_attach=" "
  deposit_claim=" "
  deposit_text=" "
  paid_back_none=" "
  termination_attach=" "
---
mandatory: true
code:  |
  # INTERVIEW FLOW BLOCK
  rta_applies
  remedy
  if (remedy == 'abatement') or (remedy == 'damages') or (remedy == 'compensation') or (remedy == 'deposit'):
    terminated_yes
  tenant.gather()
  landlord.gather()
  rental_address
  made_court_application
  served_court_application
  served_rtdrs
  if served_rtdrs:
    rtdrs_case_number
  # SECTION A
  rental_premises_type
  rent
  security_deposit
  tenancy_type
  tenancy_agreement
  tenancy_start
  residing
  if not residing:
    vacated_date
  previous_order
  # SECTION B
  if 'termination' in remedy:
    termination
    termination_date
    termination_text
    termination_served
    termination_attach
  # SECTION C
  if 'abatement' in remedy:  
    abatement_text
    abatement_attach
    abatement_claim
  # SECTION D
  if 'damages' in remedy:
    damages_text
    damages_attach
    damages_claim
  # SECTIONS E,F,G
  if 'compensation' in remedy:
    compensation_text
    compensation_claim
  if (remedy == 'deposit') and (security_deposit > 0):
    paid_back
    if paid_back == "paid_back_some":
      some_paid
    if (paid_back == "paid_back_all") or (paid_back == "paid_back_some"):
      date_paid
    move_in
    if terminated_yes:
      move_out
    statement
    if recovery_claim > 0:
      recovery_text
      sd_owed_correct
  file_fee
  other_costs
  if other_costs == True:
    costs_claim
    costs_text
  total_claim_correct
  claim_more_than_max
  # WITNESSES
  witness.gather()
  witnesses_confirmed
  tenant[0].signature
---
code: |
  if i==0:
     tenant[i].name.first
     tenant[i].address
     tenant[i].city
     tenant[i].province
     tenant[i].zip
     tenant[i].phone
     tenant[i].fax
     tenant[i].email
     tenant[i].complete = True
  else:
     tenant[i].name.first
     tenant[i].name.last
     tenant[i].complete = True
---
code: |
 landlord[i].name.first
 landlord[i].address
 landlord[i].city
 landlord[i].province
 landlord[i].zip
 landlord[i].phone
 landlord[i].fax
 landlord[i].email
 landlord[i].complete = True
---
table: tenant.table
rows: tenant
columns: 
  - Name: row_item
edit:
  - name.first
  - name.last
---
table: landlord.table
rows: landlord
columns: 
  - Name: row_item
edit:
  - name.first
  - name.last
---
##
## Check to see if the RTA applies to the user
##
question: |
  We need to figure out if the RTA applies to your situation:
subquestion: |
  If any of the following describes your situation, the RTA does not apply: 
  
  * a mobile home site? 
  * an apartment connected to a business but you rent the whole space as one?
  * a hotel room, room in a bed and breakfast or cabin in a campground where you have stayed less than 6 months?
  * a residence on campus where you do not have your own kitchen and bathroom?
  * in a nursing home?
  * in a seniors lodge?
  * in a supportive housing building?
  * in a halfway house?
  * do you share the kitchen, bathroom or living room with your landlord?

field: rta_applies
buttons:
  - "I'm ready to continue": True
  - "Exit": False
---
##
## Asks the user which remedy they are seeking
## Should trigger the appropriate sections to be asked
##
---
question: |
  What issue are you are currently having with your rental?
fields: 
  - "Select all that apply": remedy
    datatype: checkboxes
    choices:
      - I need to end my rental: termination
      - I want to pay less or no rent because my rental is not liveable: abatement
      - The landlord broke our agreement and cost me money: damages
      - I had to do something my landlord was supposed to do & I want to be repaid: compensation
      - I want to get my security deposit back: deposit
---
## Need to fill out PDF
##
code: |
  if remedy['termination']:
    termination_flag= True
  else:
    termination_flag= False
  if remedy['abatement']:
    abatement_flag=True
  else:
    abatement_flag= False 
  if remedy['damages']:
    damages_flag= True
  else:
    damages_flag= False
  if remedy['compensation']:
    compensation_flag= True
  else:
    compensation_flag= False
  if remedy['deposit']:
    deposit_flag= True
  else:
    deposit_flag= False
---
code: |
  if remedy == "termination":
    terminated_yes = False
---
code: |
  if remedy == "abatement":
    terminated_yes = False
---
code: |
  if remedy == "deposit":
    terminated_yes = True
---
question: |
  Has this rental already ended, or are you still renting?
field: terminated_yes
buttons:
  - "It has ended": True
  - "It is still going": False
---
question: | 
  % if i ==0:
    What is your name?
  % else:
    Tell us about the ${ordinal(i)} tenant.
  % endif
fields:
  - First Name: tenant[i].name.first 
  - Last Name: tenant[i].name.last
---
question: |
  What is your current contact information?
fields:
  - Phone Number: tenant[i].phone
    required: false
  - Email: tenant[i].email
    required: false
    datatype: email
  - Fax: tenant[i].fax
    required: false
  - Suite Number: tenant[i].unit
    required: false
  - Street Address: tenant[i].address
  - City: tenant[i].city
  - Province: tenant[i].province
    default: "AB"
  - Postal Code: tenant[i].zip
---
question: | 
  Were there any other people living at the rental address?  
   ${tenant.table}
    ${tenant.add_action() }

subquestion: |
  All done?
noyes: tenant.there_is_another
---
question: |
  % if i==0:  
    Please give us some information about your landlord.  
    
    If you have more than one, we'll ask you for their information afterward.
  % else:
    Tell us about the ${ordinal(i)} landlord.
  % endif
fields:
  - First Name: landlord[i].name.first 
  - Last Name: landlord[i].name.last
  - Phone Number: landlord[i].phone
    required: false
  - Email: landlord[i].email
    required: false
    datatype: email
  - Fax: landlord[i].fax
    required: false
  - Suite Number: landlord[i].unit
    required: false
  - Street Address: landlord[i].address
  - City: landlord[i].city
  - Province: landlord[i].province
    default: "AB"
  - Postal Code: landlord[i].zip
---
question: | 
  Do you have any other landlords?  
   ${landlord.table}
    ${landlord.add_action() }

subquestion: |
  All done?
noyes: landlord.there_is_another
---
question: |
  What is the address of your rental?
fields:
  - Street Address: rental_address
    default: ${tenant[0].address}
  - City: rental_city
    default: ${tenant[0].province}
  - Postal Code: rental_zip
    default: ${tenant[0].zip}
---
question: |
 Have you made an application with the Provincial Court or Court of Queen’s Bench on this matter?
field: made_court_application
buttons:
  - Yes, I have.: made_application
  - No, I have not.: did_not_make_application
help: |
    Have you already filed papers at the courthouse?
---
question: |
  Have you been served with a Provincial or Court of Queen’s Bench application on this matter?   
field: served_court_application
buttons:
  - Yes, I have.: served_application
  - No, I have not.: did_not_serve_application
help: |
   Have you been given papers from someone else that talk about this rental issue?
---
question: |
  Have you received paperwork from the RTDRS about this rental?
field: served_rtdrs
buttons:
  - Yes, I have.: have_served_rtdrs
  - No, I have not.: not_served_rtdrs
help: |
  Have you filled out this kind of paperwork before for this same rental property?
---
mandatory: |
  served_rtdrs == "have_served_rtdrs"
question: |
  What is the case number from your previous application?
fields:
  - RTDRS case number: rtdrs_case_number
---
code: |
  if served_rtdrs == "not_served_rtdrs":
    rtdrs_case_number = " "
---
## SECTION A GENERAL
##
##
##
---
question: |
  What sort of place are you renting? / did you rent?
fields: 
  - Type of Premises: rental_premises_type
    choices:
      - House: house
      - Main floor of a house: main_floor
      - Basement suite: basement
      - Room: room
      - Apartment: apartment
      - Townhouse: townhouse
      - Other: other
  - Other type of premises: rental_premises_type
    show if:
      variable: rental_premises_type
      is: other
---
question: |
  How much did you pay as a security deposit for this rental?
subquestion: |
  If you didn't pay any security deposit, enter 0.
fields:
  - Security deposit: security_deposit
    datatype: currency
    min: 0
help: |
  A security deposit is an amount of money that you gave the landlord when you moved in. 
  This is on top of the rent that you pay. 
  The landlord has to give this money back to you when you move out as long as you leave the rental in good condition.
---
question: |
  How much are you paying in rent every month?
fields:
  - Rent: rent
    datatype: currency
    min: 0
---
code: |
  if security_deposit > rent:
    extra_deposit = security_deposit - rent
  else:
    extra_deposit = 0
---
question : |
  The RTA states that your landlord cannot charge a security deposit more than your monthly rent.
subquestion: | 
  %if extra_deposit > 0:
  You have paid $ ${ extra_deposit } above what you should have paid.
  We will add this amount to your total claim.
  %else:
  Your security deposit is within the allowable amount.
  %endif
event: extra_deposit_check
continue: continue
---
question: |
  What type of lease do you have?
fields:
  - Type of lease: tenancy_type
    choices:
      - Fixed term: fixed
      - Month to month: monthly
      - Other: other_term
  - Other tenancy term: other_term
    show if:
      variable: tenancy_type
      is: other_term
help: |
    Fixed term: You are renting for a set length of time, such as 6 months, or 1 year.
    Month to month: You are renting only for one month at a time.
---
question: |
  Do you have a Tenancy Agreement?
subquestion: |
  You'll need to attach the form for this inspection.
yesno: tenancy_agreement
---
question: |
  When did you move in?
fields:
  - Date moved in: tenancy_start
    datatype: date
---
question: |
  Are you still living in this rental?
yesno: residing
---
question: |
  When did you move out?
fields:
  - Date moved out: vacated_date
    datatype: date
---
question: |
  Are there previous Orders or Judgments regarding this tenancy?
subquestion: |
  You'll need to attach the form for this inspection.
yesno: previous_order
---
## SECTION B
## TERMINATION OF TENANCY 
##
##
---
question: |
  Are you planning on moving out?
yesno: termination
---
question: |
  On what date would you like to move out?
fields:
  - Date of Termination: termination_date
    datatype: date
---
question: |
  What is your reason for wanting to move out?
fields:
  - Explain here: termination_text 
---
question: |
  Did you tell your landlord in writing that you are planning on moving out?
yesno: termination_served
---
## SECTION C
## Abatement section
##
##
---
question: |
  If you are not able to live in all or part of your rental, you can ask to pay less rent, or no rent.
subquestion: |
  Why do you think you should be paying less rent?
fields:
  - Explain here: abatement_text
    datatype: area
help: |
  You may ask to not pay rent, for example, if you can't live in the rental due to a fire, flood damage, or bedbugs.
  If you are only able to use part of the space, you can ask for reduced rent. 
---
question: |
  How much money should be taken off of your rent?
subquestion: |
  Please attach any relevant information.
fields:
  - Value: abatement_claim
    datatype: currency
    min: 0
help: |
  This is the total amount that you want your rent to be reduced by.
  Relevant information to attach may include receipts for hotel rooms or contractors, records of the dates and types of damage, or photos. 
---
## SECTION D
## Damages section
##
##
---
question: |
  What harm did the landlord cause you? What did they do to make this happen?
fields:
  - Explain here: damages_text
    datatype: area
---
question: |
  How much money did the landlord cost you?
fields:
  - Value: damages_claim
    datatype: currency
    min: 0
---
## SECTION E
## Compensation section
##
##
---
question: |
  What work did you do that the landlord should have done?
fields:
  - Explain here: compensation_text
    datatype: area
help: |
  This includes things such as repairs to the property, buying and/or installing new appliances, etc.
---
question: |
  How much did you spend on doing things that the landlord should have done?
fields:
  - Value: compensation_claim
    datatype: currency
    min: 0
---
## SECTION F
## Security Deposit
## This should probably be a variable section where it’s only shown if security_deposit has a value greater than zero AND if the tenancy has ended
---
question: |
  Now we’re going to ask about the security deposit. 
subquestion: |
  You told us that you gave the landlord a deposit of $${ security_deposit }. 
  Has the landlord paid back the deposit?
field: paid_back
choices:
  - They have paid back all of the deposit: paid_back_all
  - They have paid back only some of the deposit: paid_back_some
  - They have not paid back any of the deposit: paid_back_none
---
question: |
  How much of the security deposit did they pay back?
fields:
  - Value: some_paid
    datatype: currency
    min: 0
---
question: |
  When did the landlord pay back the deposit?
fields: 
  - Date paid back: date_paid
    datatype: date
---
question: |
  Was there a move-in inspection done?
subquestion: |
  You'll need to attach the form for this inspection.
yesno: move_in
help: |
  A move-in inspection is a checklist that you and your landlord may have gone through when you moved in.
  You would have walked around the property and pointed out anything that was wrong with the place so that your landlord couldn't blame you for it later.
---
question: |
  Was there a move-out inspection done?
subquestion: |
  You'll need to attach the form for this inspection.
yesno: move_out
help: |
  A move-out inspection is a checklist that you and your landlord may have gone through when you moved out.
  You would have walked around the property and pointed out anything that had been damaged during the time that you lived there.
---
question: |
  Did the landlord provide you with a Statement of Account for your security deposit?
subquestion: |
  You'll need to attach this statement, if you have it. 
yesno: statement
---
code: |
  if paid_back == "paid_back_some":
    recovery_claim = security_deposit - some_paid
  elif paid_back == "paid_back_none":
    recovery_claim = security_deposit
  elif paid_back == "paid_back_all":
    recovery_claim = 0
---
question: |
  Please explain why the security deposit should be paid back to you.
fields:
  - Explain here: recovery_text
    datatype: area
---
question: |
  The landlord owes you $ ${ recovery_claim } back for the security deposit.  
subquestion: |
  Is that correct?
yesno: sd_owed_correct
---
## SECTION G
## Costs section
##
##
---
question: |
  Should the landlord be required to pay the $75 fee to file this form?
yesno: file_fee
---
question: |
  Have you spent any other money to file this form that you think the landlord should be required to pay?
yesno: other_costs
help: |
  Costs to file this form could include things like printing costs, photocopying, and any costs you have paid for speaking with a lawyer.
---
question: |
  How much have you spent to file this form that you think the landlord should pay?
fields:
  - Filing costs: costs_claim
    datatype: currency
    min: 0
---
question: |
  Explain how you spent any other money to file this form that you think the landlord should be required to pay
fields:
  - Explain here: costs_text
    datatype: area
help: |
  Costs to file this form could include things like printing costs, photocopying, and any costs you have paid for speaking with a lawyer.
---
code: |
  if 'termination' not in remedy:
    termination = False
    termination_date = " "
    termination_text = " "
    termination_served = False
---
code: |
  if 'abatement' not in remedy:
    abatement_claim = 0
    abatement_text = " "  
---
code: |
  if 'damages' not in remedy:
    damages_claim = 0
    damages_text = " "
---
code: |
  if 'compensation' not in remedy:
    compensation_claim = 0
    compensation_text = " "
---
code: |
  if 'deposit' not in remedy:
    recovery_claim = 0
    paid_back = paid_back_none
    some_paid = 0
    date_paid = " "
    move_in = False
    move_out = False
    statement = False
    recovery_text = " "
    sd_owed_correct = False
---
code: |
  if other_costs == False:
    costs_claim = 0
    costs_text = " "
---
code: |
  if file_fee:
    total_claim = extra_deposit + compensation_claim + costs_claim + abatement_claim + damages_claim + recovery_claim + 75
  else:
    total_claim = extra_deposit + compensation_claim + costs_claim + abatement_claim + damages_claim + recovery_claim
---
question: |
  By our calculations, your total claim is $ ${ total_claim }.
subquestion: |
  Is this correct?
yesno: total_claim_correct  
---
## WITNESS SECTION
##
##
---
question: |
  Will you be calling any witnesses to give evidence?
yesno: witness.there_are_any
---
question: |
  What is the name of your ${ ordinal(i) } witness?
fields:
  - First Name: witness[i].name.first
  - Last Name: witness[i].name.last
---
question: |
  Do you have any other witnesses?
yesno: witness.there_is_another
---
question: |
  % if witness.there_are_any:
  Thank you, you've listed the following people as witnesses:
  ${ witness }
  % else:
  You are not calling any witnesses.
  % endif
subquestion: Is this right?
yesno: witnesses_confirmed
---
if not witnesses_confirmed:
question: |
  Do you have any other witnesses?
yesno: witness.there_is_another
---
code: |
  if total_claim > 50000:
    excess_claim = total_claim - 50000
  else:
    excess_claim = 0
---
question: |
 You can only claim amounts less than $50,000 using this form. 
subquestion: |
 % if excess_claim > 0:
 You are trying to claim $ ${ excess_claim } more than $50,000. 
 You will not be able to claim $ ${ excess_claim }, only $50,000. 
 Do you understand?
 % else:
 Your claim is within the amount allowed by the RTA and RTDRS.
 Can we proceed?
 % endif
yesno: claim_more_than_max
help: |
  If you go ahead and file this form, $50,000 is the maximum amount that you can get. If you want anything more than $50,000, you will no longer be able to ask for it through RTDRS or any court after you file this form.
---
mandatory: |
  claim_more_than_max == False
question:  |
  You're all done
subquestion: |
  Please sign below to confirm that all of the information that you've provided is true and correct.
  Today's date is ${ today() }.
signature: tenant[0].signature
---
mandatory: true
question: |
  Your document is ready.
subquestion: |
  Thank you for using this interview. 
  Please note: you can apply to the RTDRS within 2 years from the date your claim is discovered.
buttons:
  - Exit: exit
  - Restart: restart
attachments:
  - name: RTDRS Application
    filename: RTDRS_Application
    pdf template file: rtdrs-form2.pdf
    fields: 
      "termination_flag": ${ termination_flag }  
      "abatement_flag": ${ abatement_flag }
      "damages_flag": ${ damages_flag }
      "compensation_flag": ${ compensation_flag }
      "deposit_flag": ${ deposit_flag }
      "tenant.name": ${ tenant[0].name } 
      "tenant.address": ${ tenant[0].address }
      "tenant.city": ${ tenant[0].city }
      "tenant.province": ${ tenant[0].province }
      "tenant.zip": ${ tenant[0].zip }
      "tenant.fax": ${ tenant[0].fax }
      "tenant.email": ${ tenant[0].email }
      "tenant.phone": ${ tenant[0].phone }
      "landlord.name": ${ landlord[0].name }
      "landlord.address": ${ landlord[0].address }
      "landlord.province": ${ landlord[0].province }
      "landlord.city": ${ landlord[0].city }
      "landlord.zip": ${ landlord[0].zip }
      "landlord.email": ${ landlord[0].email }
      "landlord.phone": ${ landlord[0].phone }
      "landlord.fax": ${ landlord[0].fax }
      "rental.city": ${ rental_city }
      "rental.zip": ${ rental_zip }
      "rental.address": ${ rental_address }
      "made_court_application": ${ made_court_application }
      "served_court_application": ${ served_court_application }
      "served_rtdrs": ${ served_rtdrs }
      "rtdrs_case_number": ${ rtdrs_case_number }
      "rental_premises_type": ${ rental_premises_type }
      "other_premises_type": ${ other_premises_type }
      "rent": ${ rent }
      "security_deposit": ${ security_deposit }
      "other_term": ${ other_term }
      "tenancy_type": ${ tenancy_type }
      "tenancy_agreement": ${ tenancy_agreement }
      "tenancy_start": ${ tenancy_start }
      "residing": ${ residing }
      "vacated_date": ${ vacated_date }
      "previous_order": ${ previous_order }
      "termination_date": ${ termination_date }
      "termination_text": ${ termination_text }
      "termination_served": ${ termination_served }
      "abatement_text": ${ abatement_text }
      "abatement_claim": ${ abatement_claim }
      "damages_text": ${ damages_text }
      "damages_claim": ${ damages_claim }
      "compensation_text": ${ compensation_text }
      "compensation_claim": ${ compensation_claim }
      "date_paid": ${ date_paid }
      "paid_back_none": ${ paid_back_none }
      "move_in": ${ move_in }
      "move_out": ${ move_out }
      "statement": ${ statement }
      "deposit_reason": ${ deposit_text }
      "deposit_claim": ${ deposit_claim }
      "file_fee": ${ file_fee }
      "other_costs": ${ other_costs }
      "costs_text": ${ costs_text }
      "costs_claim": ${ costs_claim }
      "total_claim": ${ total_claim }
---

