---
metadata:
  title: |
    EMRLD: Electronic Means for Renter & Landlord Disputes
  short title: |
    EMRLD
  tab title: |
    EMRLD
  description: |
    A guided interview to help renters fill out the forms used by the Residential Tenancies Dispute Resolution Service (RTDRS) in Alberta.
  right: |
    ![Markdown logo](https://cloudfront.ualberta.ca/-/media/toolkit/guideline-graphics/ua-colour.jpg?w=300)
    ![Markdown logo](https://www.eclc.ca/wp-content/themes/clg-edmonton/img/logo-new.gif)
  help label: |
    ?
  authors:
    - name: LAW 599 Coding the Law
      organization: University of Alberta Faculty of Law
---
auto terms: 
    RTA: |
      The Residential Tenancies Act is the law that talks about the rights and responsibilities of renters and landlords.
    tenant: |
      This is you and anyone you live with.
    landlord: |
      This is the person you are renting from.
    RTDRS: |
      Residential Tenancy Dispute Resolution Service
    Statement of Account: |   
      Sets out the amount of the security deposit originally paid, the amount being returned, and any deductions.
    witnesses: |
      People who know about your rental situation and who can speak on your behalf.
    Fixed term: |
      You are renting for a set length of time.
    Month to month: |
      You are renting only for one month at a time.
    Tenancy Agreement: |
      A document that you and your landlord both signed, which sets out information about the rental such as how long you will live there, how much you will pay, what the rent includes.
    security deposit: |
      An amount of money that you gave the landlord when you moved in.
    Orders: |
      A court or a judge has told a person to do or not do something.
    Judgments: |
      An issue with this rental has already been decided in court.
---
modules:
  - docassemble.base.core
  - docassemble.base.util
---
objects:
  - tenant: DAList.using(object_type=Individual, complete_attribute="complete",there_are_any=True)
  - landlord: DAList.using(object_type=Individual, complete_attribute="complete", there_are_any=True)
  - witness: DAList.using(object_type=Individual, there_are_any=True)
  - evidence: DAList.using(object_type=Thing, there_are_any=True)
---
sections:
  - intro: Introduction
    subsections:
	  - rta: Does the RTA apply?
	  - problem: What is the problem?
  - about: About you
    subsections:
	    - yourname: Name
      - yourinfo: Contact info
	    - othertenants: Other tenants
  - yourlandlord: About your landlord
    subsections:
      - landlordname: Landlord name
      - landlordinfo: Landlord contact info
      - otherlandlords: Other landlords
  - yourrental: About your rental
    subsections:
      - rentaladdress: Address
      - courtapps: My court applications
      - papersserved: Papers served on me
      - pastrtdrs: Past RTDRS
      - rentaltype: Type of place
      - monthlyrent: Rent
      - deposit: Security deposit
      - leasetype: Type of lease
      - agreement: Tenancy Agreement
      - residentstatus: Still living there?
      - ordersjudgments: Orders or Judgments
  - tenancytermination: Termination of tenancy
    subsections:
      - movingout: Moving out?
      - landlordknows: Does your landlord know?
  - payless: Abatement (pay less rent)
    subsections:
      - notlive: Not able to live there?
      - abatementamount: Abatement amount
  - damages: Damages
    subsections:
      - landlordharm: Has the landlord cost you money?
      - damagesamount: Amount of damages
  - compensation: Compensation
    subsections:
      - fixthings: Did you fix things on the property?
      - compensationamount: Amount of compensation
  - securityclaim: Security deposit claim
    subsections:
      - movein: Move in inspection
      - moveout: Move out inspection
      - accountstatement: Statement of Account
      - returndeposit: Should you get your deposit back?
  - costs: Costs
    subsections:
      - filefee: Filing fee
      - otherfile: Other filing costs
  - witnesses: Witnesses
  - pleasesign: Signature
  - conclusion: Application complete
progressive: True
---
features:
  navigation: True
  progress bar: True
---
mandatory: True
code: |
  menu_items = [ action_menu_item('Roadmap', 'road_map') ]
---
initial: True
code: |
  if returning_user(minutes=0.5):
    welcome_back
---
event: intro
code: |
  force_ask('beginning')
---
event: rta
code: |
  force_ask('rta_applies')
---
event: problem
code: |
  force_ask('remedy')
---
event: yourname
section: yourname
question: |
  Would you like to change your information?
review:
  - Change: tenant[0].name.first
    button: |
      First Name:   ${ tenant[0].name.first }
  - Change: tenant[0].name.last
    button: |
      Last Name:   ${ tenant[0].name.last }
---
event: yourinfo
section: yourinfo
question: |
  Would you like to change your information?
review:
  - Change: tenant[0].phone
    button: |
      Phone:   ${ tenant[0].phone }
  - Change: tenant[0].email
    button: |
      Email:   ${ tenant[0].email }
  - Change: tenant[0].fax
    button: |
      Fax:   ${ tenant[0].fax }
  - Change: tenant[0].unit
    button: |
      Unit #:   ${ tenant[0].unit }
  - Change: tenant[0].address
    button: |
      Address:   ${ tenant[0].address }
  - Change: tenant[0].city
    button: |
      City:   ${ tenant[0].city }
  - Change: tenant[0].province
    button: |
      Province:   ${ tenant[0].province }
  - Change: tenant[0].zip
    button: |
      Postal Code:   ${ tenant[0].zip }
---
event: othertenants
code: |
  force_ask('tenant.there_is_another')
---
event: landlordname
section: landlordname
question: |
  Would you like to change your landlord's information?
review:
  - Change: landlord[0].name.first
    button: |
      First Name:   ${ landlord[0].name.first }
  - Change: landlord[0].name.last
    button: |
      Last Name:   ${ landlord[0].name.last }
---
event: landlordinfo
section: landlordinfo
question: |
  Would you like to change your landlord's information?
review:
  - Change: landlord[0].phone
    button: |
      Phone:   ${ landlord[0].phone }
  - Change: landlord[0].email
    button: |
      Email:   ${ landlord[0].email }
  - Change: landlord[0].fax
    button: |
      Fax:   ${ landlord[0].fax }
  - Change: landlord[0].unit
    button: |
      Unit #:   ${ landlord[0].unit }
  - Change: landlord[0].address
    button: |
      Address:   ${ landlord[0].address }
  - Change: landlord[0].city
    button: |
      City:   ${ landlord[0].city }
  - Change: landlord[0].province
    button: |
      Province:   ${ landlord[0].province }
  - Change: landlord[0].zip
    button: |
      Postal Code:   ${ landlord[0].zip }
---
event: otherlandlords
code: |
  force_ask('landlord.there_is_another')
---
event: rentaladdress
section: rentaladdress
question: |
  Would you like to change your rental address?
review:
  - Change: rental_address
    button: |
      Address:   ${ rental_address }
  - Change: rental_city
    button: |
      City:   ${ rental_city }
  - Change: rental_zip
    button: |
      Postal Code:   ${ rental_zip }
---
event: courtapps
code: |
  force_ask('made_court_application')
---
event: papersserved
code: |
  force_ask('served_court_application')
---
event: pastrtdrs
code: |
  force_ask('served_rtdrs')
---
event: rentaltype
code: |
  force_ask('rental_premises_type')
---
event: deposit
code: |
  force_ask('security_deposit')
---
event: monthlyrent
code: |
  force_ask('rent')
---
event: leasetype
code: |
  force_ask('tenancy_type')
---
event: agreement
code: |
  force_ask('tenancy_agreement')
---
event: residentstatus
code: |
  force_ask('residing')
---
event: ordersjudgments
code: |
  force_ask('previous_order')
---
event: movingout
code: |
  force_ask('termination')
---
event: landlordknows
code: |
  force_ask('termination_served')
---
event: notlive
code: |
  force_ask('abatement_text')
---
event: abatementamount
code: |
  force_ask('abatement_claim')
---
event: landlordharm
code: |
  force_ask('damages_text')
---
event: damagesamount
code: |
  force_ask('damages_claim')
---
event: fixthings
code: |
  force_ask('compensation_text')
---
event: compensationamount
code: |
  force_ask('compensation_claim')
---
event: securityclaim
code: |
  force_ask('paid_back')
---
event: movein
code: |
  force_ask('move_in')
---
event: moveout
code: |
  force_ask('move_out')
---
event: accountstatement
code: |
  force_ask('statement')
---
event: returndeposit
code: |
  force_ask('recovery_text')
---
event: filefee
code: |
  force_ask('file_fee')
---
event: otherfile
code: |
  force_ask('other_costs')
---
event: witnesses
code: |
  force_ask('witness.there_is_another')
---
event: pleasesign
code: |
  force_ask('signature')
---
event: conclusion
code: |
  force_ask('exit')
---
event: welcome_back
question: |
  Welcome back!
subquestion: |
  You are currently in the
  **${ nav.get_section(display=True) }**
  section.

  ${ nav }

  Press "Continue" to pick up
  where you left off.
buttons:
  Continue: continue
---
event: road_map
question: |
  Roadmap
subquestion: |
  You are currently in the
  **${ nav.get_section(display=True) }**
  section.

  ${ nav }

  Press "Continue" to resume the
  interview.
buttons:
  Continue: continue
---
## Variable Initialize block
## sets certain variables to a blank space for printing
##
code: |
  abatement_claim_hold=0
  termination_served_hold="  "
  termination_text_hold=" not applicable "
  termination_date_hold="  "
  statement_hold=False
  move_out_hold=False
  move_in_hold=False
  date_paid_hold="  "
  compensation_text_hold=" not applicable "
  damages_text_hold=" not applicable "
  abatement_text_hold=" not applicable "
  other_premises_type=" "
  other_term=" "
  vacated_date_hold=" "
  abatement_attach=" "
  damages_attach=" "
  deposit_claim=" "
  deposit_text=" not applicable "
  paid_back_none=" "
  termination_attach=" "
  tenancy_start=" "
  exhibit_order=" "
---
mandatory: true
code:  |
  # INTERVIEW FLOW BLOCK
  beginning
  rta_applies
  terminated_yes
  residing_flag=residing
  remedy
  if remedy['terminating']:
    termination=True
  tenant.gather()
  landlord.gather()
  rental_address
  made_court_application
  served_court_application
  served_rtdrs
  if served_rtdrs:
    rtdrs_case_number
  # SECTION A
  rental_premises_type
  rent
  security_deposit
  tenancy_type
  tenancy_agreement
  residing
  if residing=="not_residing":
    vacated_date
    vacated_date_hold=vacated_date
  else:
    vacated_date_hold=" "
  previous_order
  # SECTION B
  if remedy['terminating']:
    termination
    termination_date
    termination_date_hold=termination_date
    termination_text
    termination_text_hold=termination_text
    termination_served
    termination_served_hold=termination_served
    termination_attach
  # SECTION C
  if remedy['abatement']:  
    abatement_text
    abatement_text_hold=abatement_text
    abatement_attach
    abatement_claim
    abatement_claim_hold=abatement_claim
  # SECTION D
  if remedy['damages']:
    damages_text
    damages_text_hold=damages_text
    damages_attach
    damages_claim
  # SECTIONS E,F,G
  if remedy['compensation']:
    compensation_text
    compensation_text_hold=compensation_text
    compensation_claim
  if (remedy['deposit']) and (security_deposit > 0):
    paid_back
    if paid_back=='paid_back_some':
      some_paid
    if (paid_back=='paid_back_all') or (paid_back=='paid_back_some'):
      date_paid
      date_paid_hold=date_paid
    move_in
    if terminated_yes:
      move_out
      move_out_hold=move_out
    statement
    statement_hold=statement
    if recovery_claim > 0:
      recovery_text
      sd_owed_correct
  file_fee
  other_costs
  if other_costs == True:
    costs_claim
    costs_text
  total_claim_correct
  claim_amount_ok
  # WITNESSES
  witness.gather()
  evidence.gather()
  signature
---
code: |
  if i==0:
     tenant[i].name.first
     tenant[i].address
     tenant[i].city
     tenant[i].province
     tenant[i].zip
     tenant[i].phone
     tenant[i].fax
     tenant[i].email
     tenant[i].complete = True
  else:
     tenant[i].name.first
     tenant[i].name.last
     tenant[i].complete = True
---
code: |
 landlord[i].name.first
 landlord[i].address
 landlord[i].city
 landlord[i].province
 landlord[i].zip
 landlord[i].phone
 landlord[i].fax
 landlord[i].email
 landlord[i].complete = True
---
table: tenant.table
rows: tenant
columns: 
  - Name: row_item
edit:
  - name.first
  - name.last
---
table: landlord.table
rows: landlord
columns: 
  - Name: row_item
edit:
  - name.first
  - name.last
---
table: witness.table
rows: witness
columns:
  - Name: row_item
edit:
  - name.first
  - name.last
---
table: evidence.table
rows: evidence
columns: 
  - Name: row_item
edit:
  - name.text
---
##
## Welcome screen
##
question: |
  Welcome to EMRLD: 
  
  Electronic Means for Renter & Landlord Disputes.
subquestion: |
  This interview will take you step-by-step through the RTDRS form that you need 
  to file a complaint against your landlord.
  
  If a word is in green, you can click on it to get an definition of that word.
  
  A help section is available for many questions. You will see a yellow star at 
  the top of the screen when the Help system is available for that question.
  
  If you have  questions, you can contact the Edmonton Community Legal Centre (ECLC) 
  at: intake@eclc.ca or (780) 702-1726.

field: beginning
buttons:
  - "I'm ready to continue": True
  - "Exit": False
section: intro
---
##
## Check to see if the RTA applies to the user
##
question: |
  We need to figure out if the RTA applies to your situation:
subquestion: |
  If any of the following describes your situation, the RTA does not apply: 
  
  * a mobile home site? 
  * an apartment connected to a business but you rent the whole space as one?
  * a hotel room, room in a bed and breakfast or cabin in a campground where you have stayed less than 6 months?
  * a residence on campus where you do not have your own kitchen and bathroom?
  * in a nursing home?
  * in a seniors lodge?
  * in a supportive housing building?
  * in a halfway house?
  * do you share the kitchen, bathroom or living room with your landlord?

field: rta_applies
buttons:
  - "I'm ready to continue": True
  - "Exit": False
section: rta
---
##
## Asks the user which remedy they are seeking
## Should trigger the appropriate sections to be asked
##
---
question: |
  What issue(s) are you having?
fields: 
  - "Select all that apply": remedy
    datatype: checkboxes
    choices:
      - I need to end my rental: terminating
      - I want to pay less or no rent because my rental is not liveable: abatement
      - The landlord broke our agreement and cost me money: damages
      - I had to do something my landlord was supposed to do & I want to be repaid: compensation
      - I want to get my security deposit back: deposit
section: problem
---
code: |
  if remedy == "terminating":
    terminated_yes = False
---
code: |
  if remedy == "abatement":
    terminated_yes = False
---
code: |
  if remedy == "deposit":
    terminated_yes = True
---
question: |
  Has this rental already ended, or are you still renting?
field: terminated_yes
buttons:
  - "It has ended": True
  - "It is still going": False
---
question: | 
  % if i ==0:
    What is your name?
  % else:
    Tell us about the ${ordinal(i)} tenant.
  % endif
fields:
  - First Name: tenant[i].name.first 
  - Last Name: tenant[i].name.last
section: yourname
---
question: |
  What is your current contact information?
fields:
  - Phone Number: tenant[i].phone
    required: false
  - Email: tenant[i].email
    required: false
    datatype: email
  - Fax: tenant[i].fax
    required: false
  - Suite Number: tenant[i].unit
    required: false
  - Street Address: tenant[i].address
  - City: tenant[i].city
  - Province: tenant[i].province
    default: "AB"
  - Postal Code: tenant[i].zip
section: yourinfo
---
question: | 
  % if terminated_yes == True:
    Were 
  % elif terminated_yes == False:
    Are 
  % endif
  there any other people living at the rental address?  
   ${tenant.table}
    ${tenant.add_action() }
subquestion: |
  All done?
noyes: tenant.there_is_another
section: othertenants
---
question: |
  % if i==0:  
    Please give us some information about your landlord.  
    
    If you have more than one, we'll ask you for their information afterward.
  % else:
    Please give the ${ordinal(i)} landlord's name.
  % endif
fields:
  - First Name: landlord[i].name.first 
  - Last Name: landlord[i].name.last
section: landlordname
---
question: |
  Please provide the contact information for your landlord.
fields:
  - Phone Number: landlord[i].phone
    required: false
  - Email: landlord[i].email
    required: false
    datatype: email
  - Fax: landlord[i].fax
    required: false
  - Suite Number: landlord[i].unit
    required: false
  - Street Address: landlord[i].address
  - City: landlord[i].city
  - Province: landlord[i].province
    default: "AB"
  - Postal Code: landlord[i].zip
section: landlordinfo
---
question: | 
  If there is more than one landlord add them here. 
   ${landlord.table}
    ${landlord.add_action() }

subquestion: |
  All done?
noyes: landlord.there_is_another
section: otherlandlords
---
question: |
  What 
  % if terminated_yes == True:
    was 
  % elif terminated_yes == False:
    is 
  % endif
  the address of your rental?
fields:
  - Street Address: rental_address
    default: ${tenant[0].address}
  - City: rental_city
    default: ${tenant[0].city}
  - Postal Code: rental_zip
    default: ${tenant[0].zip}
section: rentaladdress
---
question: |
 Have you made an application with the Provincial Court or Court of Queen’s Bench on this matter?
field: made_court_application
buttons:
  - Yes, I have.: made_application
  - No, I have not.: did_not_make_application
help: |
    Have you already filed papers at the courthouse?
section: courtapps
---
question: |
  Have you been served with a Provincial or Court of Queen’s Bench application on this matter?   
field: served_court_application
buttons:
  - Yes, I have.: served_application
  - No, I have not.: did_not_serve_application
help: |
   Have you been given papers from someone else that talk about this rental issue?
section: papersserved
---
question: |
  Have you received paperwork from the RTDRS about this rental?
field: served_rtdrs
buttons:
  - Yes, I have.: have_served_rtdrs
  - No, I have not.: not_served_rtdrs
help: |
  Have you filled out this kind of paperwork before for this same rental property?
section: pastrtdrs
---
mandatory: |
  served_rtdrs == "have_served_rtdrs"
question: |
  What is the case number from your previous application?
fields:
  - RTDRS case number: rtdrs_case_number
---
code: |
  if served_rtdrs == "not_served_rtdrs":
    rtdrs_case_number = " "
---
## SECTION A GENERAL
##
##
##
---
question: |
  The space you 
  % if terminated_yes == True:
    were renting 
  % elif terminated_yes == False:
    are renting 
  % endif  
  is a(n):
#or rented
fields: 
  - Type of Premises: rental_premises_type
    choices:
      - House: house
      - Main floor of a house: main_floor
      - Basement suite: basement
      - Room: room
      - Apartment: apartment
      - Townhouse: townhouse
      - Other: other
  - Other type of premises: other_premises_type
    show if:
      variable: rental_premises_type
      is: other
section: rentaltype
---
question: |
  How much did you pay as a security deposit for this rental?
subquestion: |
  It is often called a damage deposit. If you didn't pay any deposit, enter 0.
fields:
  - Deposit: security_deposit
    datatype: currency
    min: 0
help: |
  A security deposit is the money you give the landlord when you move in. 
  The deposit is not rent. It can be used for damage or repairs to the rental.
  The landlord must return your deposit when you move out. They may use all or part of the deposit for their costs if the RTA allows it.
section: deposit
---
question: |
  How much 
  % if terminated_yes == True:
    was 
  % elif terminated_yes == False:
    is 
  % endif  
  the rent each month?
fields:
  - Rent: rent
    datatype: currency
    min: 0
section: monthlyrent
---
code: |
  if security_deposit > rent:
    extra_deposit = security_deposit - rent
  else:
    extra_deposit = 0
---
question : |
  By law, your landlord cannot hold a deposit more than the monthly rent.
subquestion: | 
  % if extra_deposit > 0:
    You paid $ ${ extra_deposit } more than you should have.
    The extra amount will be added to your total claim.
  % else:
    Your security deposit is within the allowable amount.
  % endif
event: extra_deposit_check
continue: continue
---
question: |
  What 
  % if terminated_yes == True:
    was 
  % elif terminated_yes == False:
    is  
  % endif  
  your tenancy term?
subquestion: |
  The rental term is the length of time you agreed to rent the property.
fields:
  - Type of lease: tenancy_type
    choices:
      - Fixed term: fixed
      - Month to month: monthly
      - Other: other_term
  - Other tenancy term: other_term_type
    show if:
      variable: tenancy_type
      is: other_term
help: |
    Fixed term: You rent for a set length of time, like 6 months, or 1 year.
    Month to month: You rent for one month at a time, or the rental is open (without an end date).
section: leasetype
---
question: |
  Do you have a tenancy agreement or a lease?
fields:
  - Can you attach a copy of your Tenancy Agreement?: tenancy_agreement
    choices:
      - Yes, I'm attaching a copy: attached
      - No, I never got an agreement or I have lost it: not_attached
  - My tenancy started on: tenancy_start
    show if:
      variable: tenancy_agreement
      is: not_attached
section: agreement
---
question: |
  Have you moved out yet?
fields:
  - Are you still living there?: residing
    choices:
      - Yes, I'm still living there: still_residing
      - No, I moved out: not_residing
---
question: |
  When did you move out?
fields: 
  - Date: vacated_date
section: residentstatus
---
question: |
  Have you ever gone to court or the RTDRS about this rental before?
field: previous_order
choices:
  - Yes, I have: have_order
  - No, I have not: no_order
section: ordersjudgments
---
## SECTION B
## TERMINATION OF TENANCY 
##
##
---
question: |
  Are you planning on moving out?
yesno: termination
section: movingout
---
question: |
  On what date would you like to move out?
fields:
  - Date of Termination: termination_date
    datatype: date
---
question: |
  What is your reason for wanting to move out?
fields:
  - Explain here: termination_text 
---
question: |
  Did you tell your landlord in writing that you are planning on moving out?
yesno: termination_served
section: landlordknows
---
## SECTION C
## Abatement section
##
##
---
question: |
  If you are not able to live in all or part of your rental, you can ask to pay less rent, or no rent.
subquestion: |
  Why do you think you should be paying less rent?
fields:
  - Explain here: abatement_text
    datatype: area
help: |
  You may ask to not pay rent, for example, if you can't live in the rental due to a fire, flood damage, or bedbugs.
  If you are only able to use part of the space, you can ask for reduced rent. 
section: notlive
---
question: |
  How much money should be taken off of your rent?
subquestion: |
  Please attach any relevant information.
fields:
  - Value: abatement_claim
    datatype: currency
    min: 0
help: |
  This is the total amount that you want your rent to be reduced by.
  Relevant information to attach may include receipts for hotel rooms or contractors, records of the dates and types of damage, or photos. 
section: abatementamount
---
## SECTION D
## Damages section
##
##
---
question: |
  What harm did the landlord cause you? What did they do to make this happen?
fields:
  - Explain here: damages_text
    datatype: area
section: landlordharm
---
question: |
  How much money did the landlord cost you?
fields:
  - Value: damages_claim
    datatype: currency
    min: 0
section: damagesamount
---
## SECTION E
## Compensation section
##
##
---
question: |
  What work did you do that the landlord should have done?
fields:
  - Explain here: compensation_text
    datatype: area
help: |
  This includes things such as repairs to the property, buying and/or installing new appliances, etc.
section: fixthings
---
question: |
  How much did you spend on doing things that the landlord should have done?
fields:
  - Value: compensation_claim
    datatype: currency
    min: 0
section: compensationamount
---
## SECTION F
## Security Deposit
---
question: |
  Now we’re going to ask about the security deposit. 
subquestion: |
  You told us that you gave the landlord a deposit of $${ security_deposit }. 
  Has the landlord paid back the deposit?
field: paid_back
choices:
  - They have paid back all of the deposit: paid_back_all
  - They have paid back only some of the deposit: paid_back_some
  - They have not paid back any of the deposit: paid_back_none
section: securityclaim
---
question: |
  How much of the security deposit did they pay back?
fields:
  - Value: some_paid
    datatype: currency
    min: 0
---
question: |
  When did the landlord pay back the deposit?
fields: 
  - Date paid back: date_paid
    datatype: date
---
question: |
  Was there a move-in inspection done?
subquestion: |
  You'll need to attach the form for this inspection.
yesno: move_in
help: |
  A move-in inspection is a checklist that you and your landlord may have gone through when you moved in.
  You would have walked around the property and pointed out anything that was wrong with the place so that your landlord couldn't blame you for it later.
section: movein
---
question: |
  Was there a move-out inspection done?
subquestion: |
  You'll need to attach the form for this inspection.
yesno: move_out
help: |
  A move-out inspection is a checklist that you and your landlord may have gone through when you moved out.
  You would have walked around the property and pointed out anything that had been damaged during the time that you lived there.
section: moveout
---
question: |
  Did the landlord provide you with a Statement of Account for your security deposit?
subquestion: |
  You'll need to attach this statement, if you have it. 
yesno: statement
section: accountstatement
---
code: |
  if paid_back == "paid_back_some":
    recovery_claim = security_deposit - some_paid
  elif paid_back == "paid_back_none":
    recovery_claim = security_deposit
  elif paid_back == "paid_back_all":
    recovery_claim = 0
---
question: |
  Please explain why the security deposit should be paid back to you.
fields:
  - Explain here: recovery_text
    datatype: area
section: returndeposit
---
question: |
  The landlord owes you $${ recovery_claim } back for the security deposit.  
subquestion: |
  Is that correct?
yesno: sd_owed_correct
---
## SECTION G
## Costs section
##
##
---
question: |
  Should the landlord be required to pay the $75 fee to file this form?
yesno: file_fee
section: filefee
---
question: |
  Have you spent any other money to file this form that you think the landlord should be required to pay?
yesno: other_costs
help: |
  Costs to file this form could include things like printing costs, photocopying, and any costs you have paid for speaking with a lawyer.
section: otherfile
---
question: |
  How much have you spent to file this form that you think the landlord should pay?
fields:
  - Filing costs: costs_claim
    datatype: currency
    min: 0
---
question: |
  Explain how you spent any other money to file this form that you think the landlord should be required to pay
fields:
  - Explain here: costs_text
    datatype: area
help: |
  Costs to file this form could include things like printing costs, photocopying, and any costs you have paid for speaking with a lawyer.
---
code: |
  if remedy['terminating'] == False:
    termination = False
    termination_date = " "
    termination_date_hold=termination_date
    termination_text = " "
    termination_text_hold=termination_text
    termination_served = False
    termination_served_hold=termination_served
---
code: |
  if remedy['abatement']==False:
    abatement_claim = 0
    abatement_claim_hold=abatement_claim
    abatement_text_hold = " "  
---
code: |
  if remedy['damages']==False:
    damages_claim = 0
    damages_text = " "
---
code: |
  if remedy['compensation']==False:
    compensation_claim = 0
    compensation_text = " "
---
code: |
  if remedy['deposit']==False:
    recovery_claim = 0
    paid_back = paid_back_none
    some_paid = 0
    date_paid = " "
    move_in = False
    move_in_hold=move_in
    move_out = False
    statement = False
    statement_hold=statement
    recovery_text = " "
    sd_owed_correct = False
---
code: |
  if other_costs == False:
    costs_claim = 0
    costs_text = " "
---
code: |
  if file_fee:
    total_claim = extra_deposit + compensation_claim + costs_claim + abatement_claim + damages_claim + recovery_claim + 75
  else:
    total_claim = extra_deposit + compensation_claim + costs_claim + abatement_claim + damages_claim + recovery_claim
---
question: |
  By our calculations, your total claim is $ ${ total_claim }.
subquestion: |
  Is this correct?
yesno: total_claim_correct  
---
## WITNESS SECTION
##
##
---
question: |
  Will you be calling any witnesses to give evidence?
yesno: witness.there_are_any
section: witnesses
---
question: |
  What is the name of your ${ ordinal(i) } witness?
fields:
  - First Name: witness[i].name.first
  - Last Name: witness[i].name.last
---
question: | 
  Are there any other witnesses?  
   ${witness.table}
    ${witness.add_action() }
subquestion: |
  All done?
noyes: witness.there_is_another
---
code: |
  if total_claim > 50000:
    excess_claim = total_claim - 50000
  else:
    excess_claim = 0
---
question: |
 You can only claim amounts less than $50,000 using this form. 
subquestion: |
 % if excess_claim > 0:
 You are trying to claim $ ${ excess_claim } more than $50,000. 
 You will not be able to claim $ ${ excess_claim }, only $50,000. 
 Do you understand?
 % else:
 Your claim is within the amount allowed by the RTA and RTDRS.
 Can we proceed?
 % endif
field: claim_amount_ok
buttons:
  - "Yes, proceed with my claim": True
  - "Exit": False
help: |
  If you go ahead and file this form, $50,000 is the maximum amount that you can get. If you want anything more than $50,000, you will no longer be able to ask for it through RTDRS or any court after you file this form.
---
mandatory: |
  claim_amount_ok == True
question:  |
  You're all done!
subquestion: |
  Please sign below to confirm that all of the information that you've provided is true and correct,
  and that your total claim amount is $ ${ total_claim }. 
  Today's date is ${ today() }.
signature: signature
section: pleasesign
---
question: |
  Evidence is very important.  You must print out and add any evidence you plan to use to support your case.  It has to be labelled and added to the whole application package.  If you have emails, receipts, contracts, text messages that you will be printing and adding make a list of them now.
yesno: continue
---
question: |
  Try to describe each piece of evidence.  
subquestion: |
  Here are some good examples of descriptions:
  
  * receipt for stuff used to paint kitchen
  * lease agreement
  * pictures of damage to the carpet
  * email from landlord on January 2
  
  Tell us about the ${ ordinal(i) } piece of evidence. 
 
  
fields:
  - Evidence: evidence[i].name.text
  - Item: evidence[i].name.text2
    default: ${ alpha(i) }
---
question: | 
  Here is the evidence you have listed so far. 
   ${ evidence.table }
     ${ evidence.add_action() }

subquestion: |
  All done? 
noyes: evidence.there_is_another
---
question: Here are the instructions for filing this application. Download these and then go to the next screen.
attachment:
  - name: Memo
    filename: instructions.md 
    content file: instructions.md
buttons:
  - Continue to the next step: continue
mandatory: True
---
mandatory: true
question: |
  Your RTDRS application is ready. 
subquestion: |
  Thank you for using this interview. 
  Please note: you can apply to the RTDRS within 2 years from the date your claim is discovered.
buttons:
  - Exit: exit
  - Restart: restart
attachments:
  - name: RTDRS Application
    filename: RTDRS_Application
    pdf template file: rtdrs-form2.pdf
    fields: 
      "termination_flag": ${ remedy['terminating'] }  
      "abatement_flag": ${ remedy['abatement'] }
      "damages_flag": ${ remedy['damages'] }
      "compensation_flag": ${ remedy['compensation'] }
      "deposit_flag": ${ remedy['deposit'] }
      "tenant.name": ${ tenant } 
      "tenant.address": ${ tenant[0].address }
      "tenant.city": ${ tenant[0].city }
      "tenant.province": ${ tenant[0].province }
      "tenant.zip": ${ tenant[0].zip }
      "tenant.fax": ${ tenant[0].fax }
      "tenant.email": ${ tenant[0].email }
      "tenant.phone": ${ tenant[0].phone }
      "landlord.name": ${ landlord }
      "landlord.address": ${ landlord[0].address }
      "landlord.province": ${ landlord[0].province }
      "landlord.city": ${ landlord[0].city }
      "landlord.zip": ${ landlord[0].zip }
      "landlord.email": ${ landlord[0].email }
      "landlord.phone": ${ landlord[0].phone }
      "landlord.fax": ${ landlord[0].fax }
      "rental.city": ${ rental_city }
      "rental.zip": ${ rental_zip }
      "rental.address": ${ rental_address }
      "made_court_application": ${ made_court_application }
      "served_court_application": ${ served_court_application }
      "served_rtdrs": ${ served_rtdrs }
      "rtdrs_case_number": ${ rtdrs_case_number }
      "rental_premises_type": ${ rental_premises_type }
      "other_premises_type": ${ other_premises_type }
      "rent": ${ rent }
      "security_deposit": ${ security_deposit }
      "other_term": ${ other_term }
      "tenancy_type": ${ tenancy_type }
      "tenancy_agreement": ${ tenancy_agreement }
      "tenancy_start": ${ tenancy_start }
      "residing": ${ residing_flag }
      "vacated_date": ${ vacated_date_hold }
      "previous_order": ${ previous_order }
      "termination_date": ${ termination_date_hold }
      "termination_text": ${ termination_text_hold }
      "termination_served": ${ termination_served_hold }
      "abatement_text": ${ abatement_text_hold }
      "abatement_claim": ${ abatement_claim_hold }
      "damages_text": ${ damages_text_hold }
      "damages_claim": ${ damages_claim }
      "compensation_text": ${ compensation_text_hold }
      "compensation_claim": ${ compensation_claim }
      "date_paid": ${ date_paid_hold }
      "paid_back_none": ${ paid_back_none }
      "move_in": ${ move_in_hold }
      "move_out": ${ move_out_hold }
      "statement": ${ statement_hold }
      "deposit_reason": ${ deposit_text }
      "deposit_claim": ${ deposit_claim }
      "file_fee": ${ file_fee }
      "other_costs": ${ other_costs }
      "costs_text": ${ costs_text }
      "costs_claim": ${ costs_claim }
      "total_claim": ${ total_claim }
      "witness.name": ${ witness }
      "today_date": ${ today() }
      "signature": ${ signature }
section: conclusion
---
